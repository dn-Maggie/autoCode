##创建controller类
package $!{bean.beanUrl};

import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.annotation.Resource;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import com.dongnao.workbench.common.page.Page;
import com.dongnao.workbench.common.util.AjaxUtils;
import com.dongnao.workbench.common.util.Utils;
import com.dongnao.workbench.common.util.FormatEntity;
import $!{bean.impBeanUrl};
import $!{bean.impBeanServcieUrl};

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.servlet.ModelAndView;


/**
 * 描述：$!{bean.proxClassZhName}模块controller类，负责页面分发与跳转
 * 
 * @author $!{annotation.authorName}
 * @version $!{annotation.version} $!{annotation.date}
 */
 
@Controller
@RequestMapping("$!{bean.lowerName}")
public class $!{bean.uperName}Controller{
         @Resource
	private $!{bean.uperName}Service $!{bean.lowerName}Service;
	 
 	/**
 	* 进入新增页面
 	* @return ModelAndView 返回到新增页面
 	*/
 	@RequestMapping("/toAdd$!{bean.uperName}")
	public ModelAndView toAdd(){
		ModelAndView mv = new ModelAndView("WEB-INF/jsp/$!{bean.modelName}/$!{bean.lowerName}/add$!{bean.uperName}");
		return mv;
	}
	
	/**
	 * 进入查看页面方法
	 * @param key String：实体id
	 * @return ModelAndView: 查询实体
	 */	
	@RequestMapping("/toShow$!{bean.uperName}")
	public ModelAndView toShow(String key){
		$!{bean.uperName} entity = $!{bean.lowerName}Service.getByPrimaryKey(key);
		Map<String,String> $!{bean.lowerName} = FormatEntity.getObjectValue(entity);
		return new ModelAndView("WEB-INF/jsp/$!{bean.modelName}/$!{bean.lowerName}/show$!{bean.uperName}","$!{bean.lowerName}",$!{bean.lowerName} );
	}
	
	/**
	 * 新增方法
	 * @param response HttpServletResponse
	 * @param $!{bean.lowerName} $!{bean.uperName}:实体类
	 * @return: ajax输入json字符串
	 */
	@RequestMapping("/add$!{bean.uperName}")
	public void add($!{bean.uperName} $!{bean.lowerName},HttpServletRequest request,HttpServletResponse response){
	$!{bean.lowerName}.set$!{bean.uperName}Id(Utils.generateUniqueID());
	AjaxUtils.sendAjaxForObjectStr(
				response,$!{bean.lowerName}Service.add($!{bean.lowerName}));		
	}
	
	/**
	 * 删除方法
	 * @param response HttpServletResponse
	 * @param key String:多个由“，”分割开的id字符串
	 * @return: ajax输入json字符串
	 */
	@RequestMapping("/delete$!{bean.uperName}")
	public void deleteByKey(String key,HttpServletResponse response){
		String[] str = key.split(",");
		for(int i=0;i<str.length;i++){
			$!{bean.lowerName}Service.deleteByKey(str[i]);
		}
		Map<String, String> map = new HashMap<String, String>();
		map.put("msg", "成功");
		AjaxUtils.sendAjaxForMap(response, map);
	}
	
	/**
	 * 进入列表页面
	 * @return ModelAndView
	 */
	@RequestMapping("/toList$!{bean.uperName}")
	public ModelAndView toList(){
		 ModelAndView mv = new ModelAndView("WEB-INF/jsp/$!{bean.modelName}/$!{bean.lowerName}/list$!{bean.uperName}");
		 return mv;
	}
	
	/**
	 * 根据条件查找列表方法
	 * @param $!{bean.lowerName} $!{bean.uperName}：实体对象（查询条件）
	 * @param request HttpServletRequest
	 * @param response HttpServletResponse
	 * @param page Page:分页对象
	 * @return: ajax输入json字符串
	 */
	@RequestMapping("/list$!{bean.uperName}")
	public void listByCondition($!{bean.uperName} $!{bean.lowerName},HttpServletRequest request,
			HttpServletResponse response, Page page){
		$!{bean.lowerName}.setPage(page);	
		List<$!{bean.uperName}> list = $!{bean.lowerName}Service.listByCondition($!{bean.lowerName});
		AjaxUtils.sendAjaxForPage(request, response, page, list);
	}
	
	/**
	 * 进入修改页面方法
	 * @param key String：实体id
	 * @return ModelAndView: 查询实体
	 */	
	@RequestMapping("/toEdit$!{bean.uperName}")
	public ModelAndView toEdit(String key){
		$!{bean.uperName} entity = $!{bean.lowerName}Service.getByPrimaryKey(key);
		Map<String,String> $!{bean.lowerName} = FormatEntity.getObjectValue(entity);
		
		return new ModelAndView("WEB-INF/jsp/$!{bean.modelName}/$!{bean.lowerName}/edit$!{bean.uperName}","$!{bean.lowerName}",$!{bean.lowerName} );
	}
	
	/**
	 * 修改方法
	 * @param $!{bean.lowerName} $!{bean.uperName}：实体对象
	 * @param response HttpServletResponse
	 * @return: ajax输入json字符串
	 */	
	@RequestMapping("/update$!{bean.uperName}")
	public void update($!{bean.uperName} $!{bean.lowerName},HttpServletRequest request,HttpServletResponse response){
		AjaxUtils.sendAjaxForObjectStr(
				response,$!{bean.lowerName}Service.update($!{bean.lowerName}));	
	}
	
}